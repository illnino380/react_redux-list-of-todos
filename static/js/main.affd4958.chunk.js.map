{"version":3,"sources":["features/filter.ts","features/currentTodo.ts","api.ts","features/todos.ts","features/user.ts","app/store.ts","components/TodoList/TodoList.tsx","app/hooks.ts","app/selectors.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterActionType","TODO_ACTIONS","todo","type","payload","currentTodoReducer","state","action","initialState","query","status","FILTER_ACTIONS","SetQuery","RemoveQuery","SetStatus","filterReducer","RemoveStatus","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","json","getUser","userId","getTodosActionCreator","todos","loadTodosFromServerAction","dispatch","a","TODOS_ACTIONS","getTodos","loadTodos","todosReducer","todosState","setUser","user","USER_ACTIONS","userReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","React","memo","props","useDispatch","length","className","map","id","title","completed","classNames","onClick","handleSelectButton","useAppSelector","useSelector","CURRENT_TODOS_SELECTORS","USER_SELECTORS","FILTER_SELECTORS","TODOS_SELECTORS","toLowerCase","includes","filterTodosByStatus","TodoFilter","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","Loader","TodoModal","currentUser","isLoading","useEffect","href","email","name","App","filteredTodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.affd4958.chunk.js","sourcesContent":["import { Action as BaseAction } from 'redux';\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\ninterface Action<T, P> extends BaseAction<T> {\n  payload: P,\n}\n\nexport enum FilterActionType {\n  SetQuery = 'query/SET',\n  RemoveQuery = 'query/REMOVE',\n  SetStatus = 'status/SET',\n  RemoveStatus = 'status/REMOVE',\n}\n\ntype SetQueryAction = Action<FilterActionType.SetQuery, string>;\ntype RemoveQueryAction = BaseAction<FilterActionType.RemoveQuery>;\ntype SetStatusAction = Action<FilterActionType.SetStatus, string>;\ntype RemoveStatusAction = BaseAction<FilterActionType.RemoveStatus>;\n\ntype FilterActions = SetQueryAction\n| RemoveQueryAction\n| SetStatusAction\n| RemoveStatusAction;\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: FilterActionType.SetQuery,\n  payload: query,\n});\n\nconst removeQuery = (): RemoveQueryAction => ({\n  type: FilterActionType.RemoveQuery,\n});\n\nconst setStatus = (status: string): SetStatusAction => ({\n  type: FilterActionType.SetStatus,\n  payload: status,\n});\n\nconst removeStatus = (): RemoveStatusAction => ({\n  type: FilterActionType.RemoveStatus,\n});\n\nexport const FILTER_ACTIONS = {\n  setQuery,\n  removeQuery,\n  setStatus,\n  removeStatus,\n};\n\nconst filterReducer = (\n  state = initialState,\n  action: FilterActions,\n) => {\n  switch (action.type) {\n    case FilterActionType.SetQuery:\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case FilterActionType.RemoveQuery:\n      return {\n        ...state,\n        query: '',\n      };\n\n    case FilterActionType.SetStatus:\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    case FilterActionType.RemoveStatus:\n      return {\n        ...state,\n        status: 'all',\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const TODO_ACTIONS = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw Error(`${res.status}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { Dispatch } from 'redux';\nimport { getTodos } from '../api';\nimport { Todo } from '../types/Todo';\n\n// const initialState = {\n//   todos: [],\n//   isLoading: false,\n// };\n\n// type StartLoadingAction = {\n//   type: 'loading/START'\n//   payload: boolean,\n// };\n\n// type FinishLoadingAction = {\n//   type: 'loading/FINISH'\n//   payload: boolean,\n// };\n\n// const startLoadingActionCreator = ():StartLoadingAction => ({\n//   type: 'loading/START',\n//   payload: true,\n// });\n\n// const finishLoadingActionCreator = ():FinishLoadingAction => ({\n//   type: 'loading/FINISH',\n//   payload: false,\n// });\n\ntype GetTodosAction = {\n  type: 'todos/GET',\n  payload: Todo[],\n};\n\nconst getTodosActionCreator = (todos: Todo[]): GetTodosAction => ({\n  type: 'todos/GET',\n  payload: todos,\n});\n\nconst loadTodosFromServerAction = async (\n  dispatch: Dispatch<GetTodosAction>,\n) => {\n  const todos = await getTodos();\n\n  dispatch(getTodosActionCreator(todos));\n};\n\nexport const TODOS_ACTIONS = {\n  getTodos: getTodosActionCreator,\n  loadTodos: loadTodosFromServerAction,\n};\n\ntype State = Todo[];\ntype Action = GetTodosAction;\n\nconst todosReducer = (\n  todosState: State = [],\n  action: Action,\n): Todo[] => {\n  switch (action.type) {\n    case 'todos/GET':\n      return action.payload;\n\n    default:\n      return todosState;\n  }\n};\n\nexport default todosReducer;\n","import { Dispatch } from 'redux';\nimport { getUser } from '../api';\nimport { User } from '../types/User';\n\ntype SetUserAction = {\n  type: 'user/SET',\n  payload: User,\n};\n\nconst setUser = (user: User): SetUserAction => ({\n  type: 'user/SET',\n  payload: user,\n});\n\ntype RemoveUserAction = {\n  type: 'user/REMOVE',\n};\n\nconst removeUser = (): RemoveUserAction => ({\n  type: 'user/REMOVE',\n});\n\nconst loadUserByIdFromServer = (userId: number) => {\n  return async (dispatch: Dispatch<SetUserAction>) => {\n    const user = await getUser(userId);\n\n    dispatch(setUser(user));\n  };\n};\n\nexport const USER_ACTIONS = {\n  setUser,\n  removeUser,\n  loadUserByIdFromServer,\n};\n\ntype State = User | null;\ntype Action = SetUserAction | RemoveUserAction;\n\nconst userReducer = (\n  state: State = null,\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'user/SET':\n      return action.payload;\n\n    case 'user/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\nimport userReducer from '../features/user';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n  user: userReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useDispatch } from 'react-redux';\nimport { Todo } from '../../types/Todo';\nimport { TODO_ACTIONS } from '../../features/currentTodo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = React.memo((props) => {\n  const { todos } = props;\n\n  const dispatch = useDispatch();\n\n  const handleSelectButton = (todo: Todo) => {\n    dispatch(TODO_ACTIONS.setTodo(todo));\n  };\n\n  return (\n    <>\n      {todos.length === 0\n        ? (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        ) : (\n          <table className=\"table is-narrow is-fullwidth\">\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {todos.map(todo => {\n                const {\n                  id,\n                  title,\n                  completed,\n                } = todo;\n\n                return (\n                  <tr\n                    data-cy=\"todo\"\n                    key={id}\n                  >\n                    <td className=\"is-vcentered\">{id}</td>\n                    <td className=\"is-vcentered\">\n                      {completed && (\n                        <span className=\"icon\" data-cy=\"iconCompleted\">\n                          <i className=\"fas fa-check\" />\n                        </span>\n                      )}\n                    </td>\n\n                    <td className=\"is-vcentered is-expanded\">\n                      <p className={classNames({\n                        'has-text-success': completed,\n                        'has-text-danger': !completed,\n                      })}\n                      >\n                        {title}\n                      </p>\n                    </td>\n\n                    <td className=\"has-text-right is-vcentered\">\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => handleSelectButton(todo)}\n                      >\n                        <span className=\"icon\">\n                          <i className=\"far fa-eye\" />\n                        </span>\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n\n              {/* <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">1</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">delectus aut autem</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">2</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"has-background-info-light\">\n            <td className=\"is-vcentered\">3</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">fugiat veniam minus</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">4</td>\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">et porro tempora</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">5</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">laboriosam mollitia et enim quasi adipisci quia provident illum</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">6</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">qui ullam ratione quibusdam voluptatem quia omnis</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">7</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">illo expedita consequatur quia in</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">8</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">9</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">molestiae perspiciatis ipsa</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">10</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">illo est ratione doloremque quia maiores aut</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr> */}\n            </tbody>\n          </table>\n        )}\n\n    </>\n  );\n});\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { RootState } from './store';\n\nconst currentTodoSelector = (state: RootState) => state.currentTodo;\n\nexport const CURRENT_TODOS_SELECTORS = {\n  currentTodo: currentTodoSelector,\n};\n\nconst userSelector = (state: RootState) => state.user;\n\nexport const USER_SELECTORS = {\n  user: userSelector,\n};\n\nconst filterSelector = (state: RootState) => state.filter;\n\nexport const FILTER_SELECTORS = {\n  filter: filterSelector,\n};\n\nconst todosSelector = (state: RootState) => state.todos;\n\nconst filteredTodosSelector = (state: RootState) => {\n  const { todos } = state;\n  const { query, status } = state.filter;\n\n  const filterTodosByStatus = () => {\n    switch (status) {\n      case 'active':\n        return todos.filter(todo => todo.completed === false);\n\n      case 'completed':\n        return todos.filter(todo => todo.completed === true);\n\n      default:\n        return todos;\n    }\n  };\n\n  const filteredTodosByQuery = query !== ''\n    ? todos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    ))\n    : filterTodosByStatus();\n\n  return filteredTodosByQuery;\n};\n\nexport const TODOS_SELECTORS = {\n  todos: todosSelector,\n  filteredTodos: filteredTodosSelector,\n};\n","import React, { ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { FILTER_SELECTORS } from '../../app/selectors';\nimport { FILTER_ACTIONS } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const { query, status } = useAppSelector(FILTER_SELECTORS.filter);\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    dispatch(FILTER_ACTIONS.setStatus(event.target.value));\n  };\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(FILTER_ACTIONS.setQuery(event.target.value));\n  };\n\n  const handleClearButton = () => {\n    dispatch(FILTER_ACTIONS.removeQuery());\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n            value={status}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleClearButton}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { TODO_ACTIONS } from '../../features/currentTodo';\nimport { CURRENT_TODOS_SELECTORS, USER_SELECTORS } from '../../app/selectors';\nimport { Loader } from '../Loader';\nimport { USER_ACTIONS } from '../../features/user';\n\nexport const TodoModal: React.FC = () => {\n  const currentTodo = useAppSelector(CURRENT_TODOS_SELECTORS.currentTodo);\n  const currentUser = useAppSelector(USER_SELECTORS.user);\n  const dispatch = useDispatch();\n\n  const isLoading = (currentTodo === null)\n    || (currentUser?.id !== currentTodo.userId);\n\n  const handleCloseModal = () => {\n    dispatch(TODO_ACTIONS.removeTodo());\n    dispatch(USER_ACTIONS.removeUser());\n  };\n\n  useEffect(() => {\n    if (currentTodo?.userId) {\n      dispatch(USER_ACTIONS.loadUserByIdFromServer(currentTodo.userId));\n    }\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${currentTodo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={handleCloseModal}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {currentTodo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {currentTodo.completed\n                  ? (\n                    <strong className=\"has-text-success\">\n                      Done\n                    </strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">\n                      Planned\n                    </strong>\n                  )}\n\n                {' by '}\n                {\n                  currentUser\n                    ? (\n                      <a href={`mailto:${currentUser.email}`}>\n                        {currentUser.name}\n                      </a>\n                    )\n                    : 'Anonimous'\n                }\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppSelector } from './app/hooks';\nimport { CURRENT_TODOS_SELECTORS, TODOS_SELECTORS } from './app/selectors';\nimport { TODOS_ACTIONS } from './features/todos';\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch();\n  const filteredTodos = useAppSelector(TODOS_SELECTORS.filteredTodos);\n  const currentTodo = useAppSelector(CURRENT_TODOS_SELECTORS.currentTodo);\n\n  useEffect(() => {\n    dispatch(TODOS_ACTIONS.loadTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {filteredTodos.length === 0\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList todos={filteredTodos} />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}